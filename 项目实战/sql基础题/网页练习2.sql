
--https://www.2cto.com/database/201402/282086.html

CREATE TABLE STUDENT
(SNO VARCHAR(3) NOT NULL, 
SNAME VARCHAR(4) NOT NULL,
SSEX VARCHAR(2) NOT NULL, 
SBIRTHDAY DATETIME,
CLASS VARCHAR(5))

CREATE TABLE COURSE
(CNO VARCHAR(5) NOT NULL, 
CNAME VARCHAR(10) NOT NULL, 
TNO VARCHAR(10) NOT NULL)

CREATE TABLE SCORE 
(SNO VARCHAR(3) NOT NULL, 
CNO VARCHAR(5) NOT NULL, 
DEGREE NUMERIC(10, 1) NOT NULL)
CREATE TABLE TEACHER 
(TNO VARCHAR(3) NOT NULL, 
TNAME VARCHAR(4) NOT NULL, TSEX VARCHAR(2) NOT NULL, 
TBIRTHDAY DATETIME NOT NULL, PROF VARCHAR(6), 
DEPART VARCHAR(10) NOT NULL)

INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (108 ,'曾华' 
,'男' ,1977-09-01,95033);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (105 ,'匡明' 
,'男' ,1975-10-02,95031);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (107 ,'王丽' 
,'女' ,1976-01-23,95033);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (101 ,'李军' 
,'男' ,1976-02-20,95033);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (109 ,'王芳' 
,'女' ,1975-02-10,95031);
INSERT INTO STUDENT (SNO,SNAME,SSEX,SBIRTHDAY,CLASS) VALUES (103 ,'陆君' 
,'男' ,1974-06-03,95031);

INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('3-105' ,'计算机导论',825);
INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('3-245' ,'操作系统' ,804);
INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('6-166' ,'数据电路' ,856);
INSERT INTO COURSE(CNO,CNAME,TNO)VALUES ('9-888' ,'高等数学' ,100);

INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (103,'3-245',86);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (105,'3-245',75);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (109,'3-245',68);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (103,'3-105',92);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (105,'3-105',88);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (109,'3-105',76);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (101,'3-105',64);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (107,'3-105',91);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (108,'3-105',78);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (101,'6-166',85);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (107,'6-106',79);
INSERT INTO SCORE(SNO,CNO,DEGREE)VALUES (108,'6-166',81);

INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) 
VALUES (804,'李诚','男','1958-12-02','副教授','计算机系');
INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) 
VALUES (856,'张旭','男','1969-03-12','讲师','电子工程系');
INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART)
VALUES (825,'王萍','女','1972-05-05','助教','计算机系');
INSERT INTO TEACHER(TNO,TNAME,TSEX,TBIRTHDAY,PROF,DEPART) 
VALUES (831,'刘冰','女','1977-08-14','助教','电子工程系');

SELECT  Sname,Ssex,Class FROM STUDENT
SELECT DISTINCT Depart FROM TEACHER
SELECT * FROM STUDENT
SELECT * FROM SCORE WHERE DEGREE BETWEEN 60 AND 80
SELECT * FROM SCORE WHERE DEGREE = 85 OR DEGREE = 86 OR DEGREE = 88

SELECT * FROM STUDENT WHERE CLASS = 95031 AND SSEX = '女'
SELECT * FROM STUDENT ORDER BY CLASS DESC
SELECT * FROM SCORE ORDER BY CNO , DEGREE DESC
SELECT COUNT(CLASS) FROM STUDENT WHERE CLASS = 95031
--10、查询Score表中的最高分的学生学号和课程号。
SELECT SNO,CNO FROM SCORE WHERE DEGREE=(SELECT MAX(DEGREE) FROM SCORE)

SELECT AVG(DEGREE) FROM SCORE WHERE CNO = '3-105'
--12、查询Score表中至少有5名学生选修的并以3开头的课程的平均分数。
SELECT AVG(DEGREE),CNO 
FROM SCORE 
WHERE CNO LIKE '3%'
GROUP BY CNO 
HAVING COUNT(SNO) >= 5
--13、查询最低分大于70，最高分小于90的Sno列。
SELECT SNO FROM SCORE 
GROUP BY SNO 
HAVING MIN(DEGREE) > 70 AND MAX(DEGREE) < 90

--14、查询所有学生的Sname、Cno和Degree列。
SELECT A.SNAME,B.CNO,B.DEGREE FROM STUDENT AS A JOIN SCORE AS B ON A.SNO=B.SNO;
--15、查询所有学生的Sno、Cname和Degree列。
SELECT A.CNAME, B.SNO,B.DEGREE FROM COURSE AS A JOIN SCORE AS B ON A.CNO=B.CNO ;
--16、查询所有学生的Sname、Cname和Degree列。
SELECT STUDENT.SNAME,COURSE.CNAME,SCORE.DEGREE 
FROM STUDENT INNER join SCORE ON STUDENT.SNO=SCORE.SNO
			 INNER join COURSE ON SCORE.CNO =COURSE.CNO;

SELECT * FROM STUDENT
SELECT * FROM SCORE
SELECT * FROM COURSE
--17、查询“95033”班所选课程的平均分。
SELECT AVG(SCORE.DEGREE)
FROM SCORE JOIN STUDENT ON SCORE.SNO = STUDENT.SNO
WHERE STUDENT.CLASS = 95033

create table grade(low numeric (3,0),upp numeric (3),rank char(1));
insert into grade values(90,100,'A');
insert into grade values(80,89,'B');
insert into grade values(70,79,'C');
insert into grade values(60,69,'D');
insert into grade values(0,59,'E');
SELECT * FROM grade

--现查询所有同学的Sno、Cno和rank列。
SELECT A.SNO,A.CNO,B.rank FROM SCORE A,GRADE B WHERE A.DEGREE BETWEEN B.LOW AND B.UPP

--19、查询选修“3-105”课程的成绩高于“109”号同学成绩的所有同学的记录。
SELECT * FROM SCORE 
WHERE SCORE.DEGREE>(SELECT DEGREE FROM SCORE WHERE SNO ='109' AND CNO ='3-105') AND CNO='3-105'
--20、查询score中选学一门以上课程的同学中分数为非最高分成绩的记录。 @@
SELECT SNO,CNO,DEGREE 
FROM (SELECT * 
	  FROM (SELECT ROW_NUMBER() over(PARTITION BY SNO ORDER BY DEGREE DESC ) AS ID,SNO,CNO
,DEGREE FROM SCORE ) AS SC WHERE SC.ID >1) AS S

--21、查询成绩高于学号为“109”、课程号为“3-105”的成绩的所有记录。
SELECT * FROM SCORE
WHERE SCORE.DEGREE>ALL(SELECT DEGREE FROM SCORE WHERE SNO ='109' AND CNO ='3-105') AND CNO='3-105'

--22、查询和学号为108的同学同年出生的所有学生的Sno、Sname和Sbirthday列。
select * from STUDENT asst where YEAR(SBIRTHDAY)=(select YEAR(SBIRTHDAY) from STUDENT where SNO='108')
--23、查询“张旭“教师任课的学生成绩。
SELECT SC.SNO,SC.DEGREE
FROM TEACHER AS TR JOIN COURSE AS CR ON (CR.TNO=TR.TNO) INNER JOIN SCORE AS SC ON (CR.CNO=SC.CNO)
--24、查询选修某课程的同学人数多于5人的教师姓名
select TEACHER.TNAME 
from(select re.num,re.CNO,cr.CNAME,cr.TNO 
	 from (select COUNT(*) as num ,cno 
		   from score as sc group by sc.CNO)
		   as re ,COURSE as cr 
		   where re.CNO=cr.CNO) as t
		   ,TEACHER 
where t.TNO=TEACHER.TNO and t.num>5

--25、查询95033班和95031班全体学生的记录。
SELECT SCORE.DEGREE,SCORE.CNO 
FROM STUDENT JOIN SCORE ON (SCORE.SNO = STUDENT.SNO)
WHERE STUDENT.CLASS = '95033' OR STUDENT.CLASS = '95031'
--26、查询存在有85分以上成绩的课程Cno.
SELECT CNO FROM SCORE 
GROUP BY CNO 
HAVING MAX(DEGREE)>85

SELECT DISTINCT CNO FROM SCORE 
WHERE DEGREE>85

--27、查询出“计算机系“教师所教课程的成绩表。
SELECT * FROM SCORE 
WHERE SCORE.CNO IN (select score.cno 
					from course join TEACHER ON (TEACHER.TNO = COURSE.TNO)
					WHERE TEACHER.DEPART='计算机系')
--28、查询“计算机系”与“电子工程系“不同职称的教师的Tname和Prof。
SELECT TNAME,PROF FROM TEACHER 
WHERE DEPART='计算机系' AND PROF NOT IN (SELECT PROF 
										 FROM TEACHER	WHERE DEPART = '电子工程系')

--29、查询选修编号为“3-105“课程且成绩至少高于选修编号为“3-245”的同学的
--    Cno、Sno和Degree,并按Degree从高到低次序排序。
SELECT * FROM SCORE
WHERE CNO = '3-105' 
	  AND DEGREE >ANY(SELECT DEGREE FROM SCORE WHERE CNO='3-245')
ORDER BY DEGREE DESC
--30、查询选修编号为“3-105”且成绩高于选修编号为“3-245”课程的同学的Cno、Sno和Degree.
SELECT * FROM SCORE 
WHERE CNO = '3-105'
	  AND DEGREE > ANY(SELECT DEGREE FROM SCORE WHERE CNO = '3-245')
--31、查询所有教师和同学的name、sex和birthday.
SELECT TNAME,TSEX,TBIRTHDAY
FROM TEACHER
--32、查询所有“女”教师和“女”同学的name、sex和birthday.
select st.SNAME as name,st.SSEX as sex,SBIRTHDAY as birthday from STUDENT as st where st.SSEX='女'
union
select tc.TNAME as name,tc.TSEX as sex ,tc.TBIRTHDAY as birthday from TEACHER as tc where tc.TSEX='女'
--33、查询成绩比该课程平均成绩低的同学的成绩表。
SELECT A.* FROM SCORE A
WHERE DEGREE<(SELECT AVG(DEGREE) FROM SCORE B WHERE A.CNO=B.CNO);
--34、查询所有任课教师的Tname和Depart.
select tc.TNAME,tc.DEPART from TEACHER as tc join COURSE as cr on(tc.TNO=cr.TNO)
--35 查询所有未讲课的教师的Tname和Depart.
SELECT a.TNAME ,a.DEPART FROM TEACHER A LEFT JOIN COURSE B ON A.TNO=B.TNO WHERE B.TNO IS NULL
--36、查询至少有2名男生的班号。
SELECT CLASS FROM STUDENT 
GROUP BY CLASS,SSEX
HAVING SSEX='男' AND COUNT(SSEX)>=2
--37、查询Student表中不姓“王”的同学记录。
SELECT * FROM STUDENT AS ST 
WHERE ST.SNAME NOT LIKE '%王%'
--38、查询Student表中每个学生的姓名和年龄。
SELECT STUDENT.SNAME,YEAR(GETDATE())-YEAR(STUDENT.SBIRTHDAY) AS 'AGE'
FROM STUDENT

SELECT YEAR(GETDATE())
--39、查询Student表中最大和最小的Sbirthday日期值。
SELECT MAX(STUDENT.SBIRTHDAY),MIN(STUDENT.SBIRTHDAY)
FROM STUDENT
--40、以班号和年龄从大到小的顺序查询Student表中的全部记录。
SELECT CLASS,(YEAR(getdate())-YEAR(SBIRTHDAY)) AS AGE FROM STUDENT ORDER BY CLASS DESC,AGE DESC;

SELECT * FROM STUDENT
SELECT * FROM SCORE
SELECT * FROM COURSE
SELECT * FROM TEACHER

